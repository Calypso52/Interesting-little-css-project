*{
    padding: 0;
    margin: 0;
}

body{
    display: flex;
    justify-content: center;
    align-items: center;
    /* 让页面始终占浏览器总高 */
    height: 100vh;
    /* 背景渐变色 */
    background-image: linear-gradient(200deg, #78f, #f78);
    /* 加入视距 */
    perspective: 1000px;
}

.card{
    position: relative;
    width: 300px;
    height: 450px;
    border-radius: 30px;
    cursor: pointer;
    background-color: #fff;
    box-shadow: 1px 1px 20px rgba(0, 0, 0, 0.1);
    /* 给父元素 加一个3D盒子属性  那么子元素就到背面了 这个属性是加到父元素上 但是影响的是子元素 */
    transform-style: preserve-3d;
    animation: rotate-reverse 1.2s cubic-bezier(.66, -0.47,.33,1.5) forwards;
}

.card:hover{
    /* 第四个属性保证动画到100%时停下来，不会像默认一样回到0% */
    animation: rotate 1.2s cubic-bezier(.66, -0.47,.33,1.5) forwards;
}

.front,
.back{
    display: flex;
    /* 弹性容器 让元素垂直陈列 */
    flex-direction: column;
    /* 现在子元素垂直陈列  就让子元素沿辅轴（水平）居中 */
    align-items: center;
    /* 主轴上 子元素平均分配 */
    justify-content: space-around;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* 1em = 16px */
    font-size: 1.3em;
    border-radius: 30px;
    background-color: #fff;
}

.back{
    /* 因为背面卡片要到后面去所以我们给背面卡片加一个沿Y轴旋转180的属性 */
    /* 这里面我们可以看到是旋转了但是没有到后面去 原因就是父盒子现在不是3D盒子 而是一个2D的 */
    transform: rotateY(180deg);
}

/* 下面定义一下翻转动画 */
@keyframes rotate{
    0%{
        transform: rotateY(0);
    }
    100%{
        transform: rotateY(180deg);
    }
}

@keyframes rotate-reverse{
    0%{
        transform: rotateY(180deg);
    }
    100%{
        transform: rotateY(0);
    }
}